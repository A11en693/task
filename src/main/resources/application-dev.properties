#配置端口号
server.port=8001
#2.0版本指定context path
#server.context-path
# 2.0 版本之后指定context path
server.servlet.context-path=/task
#mysql 配置
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/task
#spring.datasource.username=root
#spring.datasource.password=520508
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=org.gjt.mm.mysql.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/task?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
spring.datasource.username=root
spring.datasource.password=520508
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
#最小连接束
spring.datasource.dbcp2.max-idle=5
#初始化连接束
spring.datasource.dbcp2.initial-size=5
#最大连接束
spring.datasource.dbcp2.max-total=5
#等待连接获取的最大超时时间(毫秒)
spring.datasource.dbcp2.max-wait-millis=200
#申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能。default=true
spring.datasource.druid.test-on-borrow=false
#建议配置为true,不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。default=false
spring.datasource.druid.test-while-idle=true
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。default=false
spring.datasource.druid.test-on-return=false
#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'
spring.datasource.druid.validation-query=SELECT 1
#热部署生效
spring.devtools.restart.enabled=true
#生效的位置设定
spring.devtools.restart.additional-paths=src/main/java
#redis 配置
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
#spring.redis.password=name
#配置日志打印
logging.config=classpath:logback-dev.xml
logging.level.com.yan.task=DEBUG
#logging.file.name=task.log
#logging.file.path=D:/NetProject/task/logs
#控制台打印SQL
#logging.level.com.yan.task.dao.mapper=debug
#整合mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.yan.task.dao.mapper



